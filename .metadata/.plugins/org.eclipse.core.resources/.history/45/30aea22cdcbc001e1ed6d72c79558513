import java.sql.Time;

public class TrappingRainWater {
	
	/*
	 * Time and space required
	 * time O(n)
	 * space O(n)
	 * */
	public static void trapingRainWater(int arr[]) {
		int n = arr.length;
		int leftArray[] = new int[n];
		int rightArray[] = new int[n];
		
		int rightMax = Integer.MIN_VALUE;
		int leftMax = Integer.MIN_VALUE;
		long mostWater = 0;
		
		for (int i = n - 1; i >= 0; i--) {
			if(arr[i] > rightMax) {
				rightMax = arr[i];
			}
			rightArray[i] = rightMax;
		}
		
		for (int i = 0; i < n; i++) {
			if(arr[i] > leftMax) {
				leftMax = arr[i];
			}
			leftArray[i] = leftMax;
		}
		
		for (int i = 0; i < n; i++) {
			mostWater += Math.min(leftArray[i], rightArray[i]) - arr[i];
		}
		
		System.out.println("Total Water contained "+ mostWater);

	}
	
	/*
	 * Time and space required
	 * time O(n)
	 * space O(n)
	 * */
	
	public static void trappingRainWaterInOneSpace(int arr[]) {
		int leftMax = 0;
		int rightMax = 0;
		int ans = 0;
		
		int left = 0;
		int right = arr.length;
		
		while (left < right) {
			if(arr[left] <= arr[right])
		}
	}
	
   
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[] = {0,1,0,2,1,0,1,3,2,1,2,1};
		
		trapingRainWater(arr);
	}

}


public class TrappingRainWater {
	
	public static void trapingRainWater(int arr[]) {
		int n = arr.length;
		int leftArray[] = new int[n];
		int rightArray[] = new int[n];
		
		int rightMax = 0;
		int leftMax = 0;
		
		for (int i = 0; i < arr.length; i++) {
			if(arr[i] > leftMax) {
				leftMax = arr[i];
			}
			leftArray[i] = leftMax;
		}
		
		for (int i = arr.length - 1; i >= 0; i--) {
			if(arr[i] > rightMax) {
				rightMax = arr[i];
			}
			rightArray[i] = rightMax;
		}
		
		int mostWater = 0;
		for (int i = 0; i < arr.length; i++) {
			mostWater += Math.min(leftArray[i], rightArray[i]) - arr[i];
		}
		
		System.out.println("Total Water contained "+ mostWater);

	}
	
	public static void containerWithMostWaterOneSpace(int arr[]) {
		int leftMax = 0;
		int rightMax = 0;
		int n = arr.length -1;
		int mostWater = 0;
		
		for (int i = 0; i < arr.length / 2; i++) {
			
			if(arr[i] > leftMax) leftMax = arr[i];
			
			if(arr[n-i] > rightMax) rightMax = arr[n-i];
			
			mostWater += Math.min(leftMax, rightMax) - arr[i];
		}
		
		System.out.println("most water : "+ mostWater);
	} 

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int arr[] = {0,1,0,2,1,0,1,3,2,1,2,1};
		int arr1[] = {4,2,0,3,2,5};
		
//		trapingRainWater(arr1);
		
		containerWithMostWaterOneSpace(arr);
	}

}
